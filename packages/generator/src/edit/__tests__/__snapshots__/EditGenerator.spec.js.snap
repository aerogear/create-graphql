// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generate edit and edit mutation files 1`] = `
Object {
  "edit": "import React, { Component, PropTypes } from 'react';
import Relay from 'react-relay';
import RelayStore from '../../../RelayStore';
import { withRouter } from 'react-router';

import ExampleEditMutation from './ExampleEditMutation.js';

import Form from '../../common/Form';

class ExampleEdit extends Component {
  static contextTypes = {
    showSnackbar: PropTypes.func,
  };

  fields = [
    {
      name: 'id',
      placeholder: 'ID',
      required: true,
    },
    // TODO - add ObjectType fields here
  ];

  onSubmit = (data) => {
    const { example } = this.props;

    const mutation = new ExampleEditMutation({
      example,
      ...data,
    });

    RelayStore.commitUpdate(mutation, {
      onSuccess: () => {
        this.context.showSnackbar({
          message: 'Example edited successfully!',
        });

        this.props.router.goBack();
      },
      onFailure: (failureResponse) => {
        this.context.showSnackbar({
          message: 'There was an error while trying to edit this Example.',
        });

        console.log('FAIL', failureResponse);
      },
    });
  };

  render() {
    const { example } = this.props;

    return (
      <Form
        fields={this.fields}
        onSubmit={this.onSubmit}
        value={example}
      />
    );
  }
}

const styles = {
  formContainer: {
    display: 'flex',
    flexWrap: 'wrap',
    paddingTop: 30,
    paddingLeft: 10,
  },
  actionsContainer: {
    display: 'flex',
    justifyContent: 'flex-end',
    marginTop: 5,
    paddingRight: 8,
    borderTopStyle: 'solid',
    borderTopWidth: 1,
    paddingTop: 15,
    borderColor: '#ECECEC',
  },
  formField: {
    marginRight: 10,
    flex: '1 0 47%',
  },
  selectField: {
    marginRight: 10,
    flex: '1 0 48%',
  },
};

export default Relay.createContainer(withRouter(ExampleEdit), {
  initialVariables: {
    id: null,
  },
  fragments: {
    example: () => Relay.QL\`
      fragment on Example {
        id
        \${ExampleEditMutation.getFragment('example')}
      }
    \`,
    viewer: () => Relay.QL\`
      fragment on Viewer {
        id
      }
    \`,
  },
});
",
  "editMutation": "import Relay from 'react-relay';

export default class ExampleEditMutation extends Relay.Mutation {
  static fragments = {
    example: () => Relay.QL\`
      fragment on Example {
        id
      }
    \`,
  };

  getMutation() {
    return Relay.QL\`mutation {
      ExampleEdit
    }\`;
  }

  getVariables() {
    const {
      example: {
        id,
      },
      // Todo add more mutation input fields here
    } = this.props;

    return {
      id,
      // TODO add more mutation input fields here
    };
  }

  getFatQuery() {
    return Relay.QL\`
      fragment on ExampleEditPayload {
        example
      }
    \`;
  }

  getConfigs() {
    return [{
      type: 'FIELDS_CHANGE',
      fieldIDs: {
        example: this.props.example.id,
      },
    }];
  }
}
",
}
`;
